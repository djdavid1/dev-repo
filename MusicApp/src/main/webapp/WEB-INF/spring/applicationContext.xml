<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<description>MusikApp</description>

	<context:annotation-config />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:_config.properties</value>
				<value>classpath:config.properties</value>
				<value>file:${APP_CONFIG_ROOT}#{servletContext.contextPath}/config.properties
				</value>
			</list>
		</property>
		<property name="localOverride" value="false" />
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="applicationContextProvider" class="de.aoe.musicworld.utils.ApplicationContextProvider"
		scope="singleton" />
		
	<bean id="serverCleanup" class="de.aoe.musicworld.utils.ServerCleanup" />
	
	<bean id="recordsToReleasesTask" class="de.aoe.musicworld.transforms.tasks.RecordsToReleasesTask" scope="prototype"/>
	
	<bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" value="de.aoe.musicworld.pojo" />
		<property name="marshallerProperties">
			<map>
				<entry key="jaxb.encoding" value="UTF-8" />
				<entry key="jaxb.formatted.output">
					<value type="boolean">false</value>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" value="de.aoe.musicworld.pojo" />
		<property name="marshallerProperties">
			<map>
				<entry key="jaxb.encoding" value="UTF-8" />
				<entry key="jaxb.formatted.output">
					<value type="boolean">false</value>
				</entry>
			</map>
		</property>
	</bean>	
	
	<bean id="baseExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" scope="singleton">
		<description>A task pool for general use</description>
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="waitForTasksToCompleteOnShutdown" value="false"/>
	</bean>
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" scope="singleton">
		<description>A task pool for general use</description>
        <property name="corePoolSize" value="150" />
        <property name="maxPoolSize" value="200" />
        <property name="queueCapacity" value="10" />
        <property name="keepAliveSeconds" value="0"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
	</bean>

</beans>